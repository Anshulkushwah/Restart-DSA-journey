class Solution {
public:
    vector < int >searchRange (vector < int >&nums, int target)
{
  int n = nums.size ();
  int endpos = -1, startpos = -1;


//for starting value
 { int start = 0, end = n - 1;
  while (start <= end)
    {
      int mid = (end + start) / 2;

      if (target == nums[mid])
	{
	  startpos = mid;
	  end = mid - 1;
	  start = 0;
	}

     else if (target > nums[mid])
	{
	  start = mid + 1;
	}

     else if (target < nums[mid])
	{
	  end = mid - 1;
	}
    
    }
}
    
    //for end value


 { int start = 0, end = n - 1;
  while (start <= end)
    {
      int mid = (end + start) / 2;

      if (target == nums[mid])
	{
	  endpos = mid;
	  start = mid + 1;
	  end = n - 1;
	}

     else if (target > nums[mid])
	{
	  start = mid + 1;
	}

     else if (target < nums[mid])
	{
	  end = mid - 1;
	}
    
    }
}
    
      vector < int >ans;
	  ans.push_back (startpos);
	  ans.push_back (endpos);

	  return ans;
        
    }
};
