class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        int n = nums.size();
        if(n<3){
            return ans;
        }

        sort(nums.begin(),nums.end());

        for(int i = 0; i<n-2; i++){
            int curr = nums[i];
            if (i != 0 && nums[i] == nums[i - 1]) continue;

            int left=i+1,right = n-1;

            while(left<right){

                if(curr+nums[left]+nums[right] == 0 ){
                    vector<int> temp = {curr, nums[left], nums[right]};
                    ans.push_back(temp);
                    left++;
                    right--;
                    //skip the duplicates:
                      while (left < right && nums[left] == nums[left - 1]) left++;
                      while (left < right && nums[right] == nums[right + 1]) right--;

                }
                if(curr+nums[left]+nums[right] > 0 ){
                    right--;
                }
                if(curr+nums[left]+nums[right] < 0 ){
                    left++;
                }
            }


        }
      return ans;  
    }
};
