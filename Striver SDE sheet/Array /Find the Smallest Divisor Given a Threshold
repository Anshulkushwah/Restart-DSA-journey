class Solution {
public:

    int Check(vector<int>& nums, int mid){
        int sum=0;
        
        for(int i=0; i<nums.size(); i++){
            int temp = ceil((double)(nums[i]) / (double)(mid));
            sum+=temp;  
        }        
    return sum;
    }


    int smallestDivisor(vector<int>& nums, int threshold) {
        int n = nums.size();
        if(n>threshold) return -1;

        int max = *max_element(nums.begin(),nums.end());

        int left = 1;
        int right = max;

        while(left<=right){
           int mid = left + (right-left)/2;
            if(Check(nums,mid) <= threshold ) right = mid-1;
            else left = mid+1;
        }
        return left;
    }
};



