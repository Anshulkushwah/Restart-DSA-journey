   void insertAtTail(Node* &tail, Node* curr){
        tail->next=curr;
        tail=curr;
    }
    
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {   
        
        // Add code here
        Node* zeroes = new Node(-1);
        Node* temp0 = zeroes;
        Node* ones = new Node(-1);
        Node* temp1 = ones;
        Node* twos = new Node(-1);
        Node* temp2 = twos;
        
        Node* curr = head;
        while(curr){
            if(curr->data == 0){
                insertAtTail(temp0,curr); 
            }
            else if(curr->data == 1){
                insertAtTail(temp1,curr); 
            }
            else if(curr->data == 2){
                insertAtTail(temp2,curr); 
            }
            curr = curr -> next;
        }
        
        // merge 3 Sublist
        
        // 1st list not empty
        if(ones->next!=NULL) temp0->next = ones->next;
        else{
            // 1st list->empty
            temp0->next = twos->next;
        }
            
        temp1->next = twos->next;
        temp2->next = NULL;
        
        // setup head
        head = zeroes->next;
        
        // delete dummy nodes
        delete zeroes;
        delete ones;
        delete twos;
        
        return head;
    }
