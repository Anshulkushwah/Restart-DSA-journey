// normal code

      //stack<int>s1;
    //stack<int>s2;
    
    // MyQueue() {
        
    // }
    
    // void push(int x) {
    //     while(!s1.empty()){
    //         s2.push(s1.top());
    //         s1.pop();
    //     }
    //     s1.push(x);
    //     while(!s2.empty()){
    //         s1.push(s2.top());
    //         s2.pop();
    //     }
    // }
    
    // int pop() {
    //     int ans;
    //     if(!s1.empty()){
    //      ans = s1.top();
    //     s1.pop();
    //     }

    //     else ans=-1;

    // return ans;    
    // }
    
    // int peek() {

    //     if(!s1.empty()) return s1.top();
        
    // return -1;    
    // }
    
    // bool empty() {
    //     if(s1.empty()) return true;
    //     else return false;
    // }

    //////////////////////////////////////////////////////////////////////////

    stack<int>s1;
    stack<int>s2;
    
    MyQueue() {
        
    }
    
    void push(int x) {
        s1.push(x);
    }
    
    int pop() {
        int ans;

        if(!s2.empty()){
            ans = s2.top();
            s2.pop();
        }

        else{
            while(!s1.empty()){
            s2.push(s1.top());
            s1.pop();
            }

            if(!s2.empty()){
                ans = s2.top();
                s2.pop();
            }
            else ans=-1;
        }

    return ans;    
    }
    
    int peek() {
        int ans;
        if(!s2.empty()) return s2.top();
        else{
            while(!s1.empty()){
            s2.push(s1.top());
            s1.pop();
            }
            if(!s2.empty())  ans = s2.top();
            else ans=-1;
        }
        
    return ans;    
    }
    
    bool empty() {
        if(s1.empty() && s2.empty()) return true;
        else return false;
    }


///////////////////////////////////////////////////////////////////////////////////

