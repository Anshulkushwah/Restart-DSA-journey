    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S){
        // Code here
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        vector<int>dist(V,1e9);
        // vector<int>parent(V,-1);
        
        dist[S] = 0; // Distance to source node is 0
        pq.push({0, S});
        
        while(!pq.empty()){
            int node = pq.top().second;
            int dis = pq.top().first;
            pq.pop();
            
            for(auto it: adj[node]){
                int adjNode = it[0];
                int edweight = it[1];
                if(dis+edweight < dist[adjNode]){
                    dist[adjNode] = dis+edweight;
                    pq.push({dist[adjNode], adjNode});
                    // parent[adjNode] = node;
                }
            }
        }
        return dist;
    }
