    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n = mat.size();
        int m = mat[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        vector<vector<int>>dist(n,vector<int>(m,0));
        queue<pair<pair<int,int>,int>>q;

        for(int i=0; i<n; i++){
            for(int j =0; j<m;j++){
                if(mat[i][j] == 0 ){
                    vis[i][j] = 1;
                    q.push({{i,j},0});
                }
                else{
                    vis[i][j] = 0;
                }
            }
        }

        int DRow[]={-1,0,+1,0};
        int DCol[]={0,+1,0,-1};

        while(!q.empty()){
            int row = q.front().first.first;
            int col = q.front().first.second;
            int steps = q.front().second;
            q.pop();
            dist[row][col] = steps;

            for(int i=0; i<4;i++){
                int NRow = row+DRow[i];
                int NCol = col+DCol[i];
                if((NRow>=0 && NRow<n && NCol>=0 && NCol<m) && (vis[NRow][NCol] == 0)){
                    vis[NRow][NCol] = 1;
                    q.push({{NRow,NCol},steps+1});
                }
            }
        }
        return dist;
    }
