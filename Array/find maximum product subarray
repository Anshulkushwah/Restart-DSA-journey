

public:
    int maxProduct(vector<int>& nums) {

      //kedan algo from both side
        
        int maxi = INT_MIN;
        int prod=1;

        for(int i=0;i<nums.size();i++)
        {
          prod*=nums[i];
          maxi=max(prod,maxi);
          if(prod==0)
           prod=1;
        }
        prod=1;
        for(int i=nums.size()-1;i>=0;i--)
        {
          prod*=nums[i];

          maxi=max(prod,maxi);
          if(prod==0)
           prod=1;
        }
        return maxi;
    }
};


////////////////////second approch

lic:
    int maxProduct(vector<int>& nums) {
        
        int ans=nums[0], maxp = nums[0], minp = nums[0];
        for(int i=1;i<nums.size();i++){
            int temp = max({nums[i],maxp*nums[i],minp*nums[i]});
            minp = min({nums[i],maxp*nums[i],minp*nums[i]});
            maxp = temp;
            ans = max(maxp,ans);
        }
        return ans;
    }
